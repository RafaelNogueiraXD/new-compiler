
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ABRE_CHAVE ABRE_PARENTESE ATRIBUIR DIVIDE DOIS_PONTOS ENQUANTO FECHA_CHAVE FECHA_PARENTESE FLUTUANTE FLUTUANTE_TIPO FUNCAO IDENTIFICADOR IMPRIME INTEIRO MENOS MULTIPLICA NUMERO PARA PEGA PONTO_E_VIRGULA RETORNA SE SE_NAO SOMA TENTA TEXTO TEXTO_TIPO VIRGULAprograma : declaracoesdeclaracoes : declaracao declaracoes\n                       | declaracaodeclaracao : tipo IDENTIFICADOR ATRIBUIR expressao PONTO_E_VIRGULA\n                      | comandotipo : INTEIRO\n                | FLUTUANTE_TIPO\n                | TEXTO_TIPOexpressao : NUMERO\n                     | FLUTUANTE\n                     | TEXTO\n                     | IDENTIFICADORcomando : IMPRIME ABRE_PARENTESE expressao FECHA_PARENTESE PONTO_E_VIRGULA\n                   | FUNCAO IDENTIFICADOR ABRE_PARENTESE FECHA_PARENTESE DOIS_PONTOS ABRE_CHAVE declaracoes FECHA_CHAVE'
    
_lr_action_items = {'INTEIRO':([0,3,5,25,26,28,30,],[6,6,-5,-4,-13,6,-14,]),'FLUTUANTE_TIPO':([0,3,5,25,26,28,30,],[7,7,-5,-4,-13,7,-14,]),'TEXTO_TIPO':([0,3,5,25,26,28,30,],[8,8,-5,-4,-13,8,-14,]),'IMPRIME':([0,3,5,25,26,28,30,],[9,9,-5,-4,-13,9,-14,]),'FUNCAO':([0,3,5,25,26,28,30,],[10,10,-5,-4,-13,10,-14,]),'$end':([1,2,3,5,11,25,26,30,],[0,-1,-3,-5,-2,-4,-13,-14,]),'FECHA_CHAVE':([3,5,11,25,26,29,30,],[-3,-5,-2,-4,-13,30,-14,]),'IDENTIFICADOR':([4,6,7,8,10,13,15,],[12,-6,-7,-8,14,20,20,]),'ABRE_PARENTESE':([9,14,],[13,21,]),'ATRIBUIR':([12,],[15,]),'NUMERO':([13,15,],[17,17,]),'FLUTUANTE':([13,15,],[18,18,]),'TEXTO':([13,15,],[19,19,]),'FECHA_PARENTESE':([16,17,18,19,20,21,],[23,-9,-10,-11,-12,24,]),'PONTO_E_VIRGULA':([17,18,19,20,22,23,],[-9,-10,-11,-12,25,26,]),'DOIS_PONTOS':([24,],[27,]),'ABRE_CHAVE':([27,],[28,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'declaracoes':([0,3,28,],[2,11,29,]),'declaracao':([0,3,28,],[3,3,3,]),'tipo':([0,3,28,],[4,4,4,]),'comando':([0,3,28,],[5,5,5,]),'expressao':([13,15,],[16,22,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> declaracoes','programa',1,'p_programa','parser.py',14),
  ('declaracoes -> declaracao declaracoes','declaracoes',2,'p_declaracoes','parser.py',18),
  ('declaracoes -> declaracao','declaracoes',1,'p_declaracoes','parser.py',19),
  ('declaracao -> tipo IDENTIFICADOR ATRIBUIR expressao PONTO_E_VIRGULA','declaracao',5,'p_declaracao','parser.py',26),
  ('declaracao -> comando','declaracao',1,'p_declaracao','parser.py',27),
  ('tipo -> INTEIRO','tipo',1,'p_tipo','parser.py',34),
  ('tipo -> FLUTUANTE_TIPO','tipo',1,'p_tipo','parser.py',35),
  ('tipo -> TEXTO_TIPO','tipo',1,'p_tipo','parser.py',36),
  ('expressao -> NUMERO','expressao',1,'p_expressao','parser.py',40),
  ('expressao -> FLUTUANTE','expressao',1,'p_expressao','parser.py',41),
  ('expressao -> TEXTO','expressao',1,'p_expressao','parser.py',42),
  ('expressao -> IDENTIFICADOR','expressao',1,'p_expressao','parser.py',43),
  ('comando -> IMPRIME ABRE_PARENTESE expressao FECHA_PARENTESE PONTO_E_VIRGULA','comando',5,'p_comando','parser.py',47),
  ('comando -> FUNCAO IDENTIFICADOR ABRE_PARENTESE FECHA_PARENTESE DOIS_PONTOS ABRE_CHAVE declaracoes FECHA_CHAVE','comando',8,'p_comando','parser.py',48),
]
